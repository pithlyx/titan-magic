const SCHEMAS = {
  display: ['_id', 'name', 'image_uris'],
  meta: [
    '_id',
    'arena_id',
    'id',
    'lang',
    'mtgo_id',
    'mtgo_foil_id',
    'multiverse_ids',
    'tcgplayer_id',
    'tcgplayer_etched_id',
    'cardmarket_id',
    'object',
    'oracle_id',
    'prints_search_uri',
    'rulings_uri',
    'scryfall_uri',
    'uri',
  ],

  play: [
    '_id',
    'all_parts',
    'card_faces',
    'cmc',
    'color_identity',
    'color_indicator',
    'colors',
    'edhrec_rank',
    'hand_modifier',
    'keywords',
    'layout',
    'legalities',
    'life_modifier',
    'loyalty',
    'mana_cost',
    'name',
    'oracle_text',
    'oversized',
    'penny_rank',
    'power',
    'produced_mana',
    'reserved',
    'toughness',
    'type_line',
  ],

  print: [
    '_id',
    'artist',
    'attraction_lights',
    'booster',
    'border_color',
    'card_back_id',
    'collector_number',
    'content_warning',
    'digital',
    'finishes',
    'flavor_name',
    'flavor_text',
    'frame_effects',
    'frame',
    'full_art',
    'games',
    'highres_image',
    'illustration_id',
    'image_status',
    'image_uris',
    'prices',
    'printed_name',
    'printed_text',
    'printed_type_line',
    'promo',
    'promo_types',
    'purchase_uris',
    'rarity',
    'related_uris',
    'released_at',
    'reprint',
    'scryfall_set_uri',
    'set_name',
    'set_search_uri',
    'set_type',
    'set_uri',
    'set',
    'set_id',
    'story_spotlight',
    'textless',
    'variation',
    'variation_of',
    'security_stamp',
    'watermark',
    'preview.previewed_at',
    'preview.source_uri',
    'preview.source',
  ],

  face: [
    '_id',
    'artist',
    'cmc',
    'color_indicator',
    'colors',
    'flavor_text',
    'illustration_id',
    'image_uris',
    'layout',
    'loyalty',
    'mana_cost',
    'name',
    'object',
    'oracle_id',
    'oracle_text',
    'power',
    'printed_name',
    'printed_text',
    'printed_type_line',
    'toughness',
    'type_line',
    'watermark',
  ],

  related: ['_id', 'id', 'object', 'component', 'name', 'type_line', 'uri'],
};

const response = {
  endpoint: { return: 'the full endpoint string including query' },
  count: { return: 'number of objects returned from query' },
  pages: { return: 'total:{page count}, current:{current page}' },
  query: {
    query: { return: 'the input query' },
    queryAttributes: [
      { return: 'a list of attributes the query was checked against' },
    ],
    filterAttributes: [
      { return: 'an object with the passed in filter attributes and values' },
    ],
    schema: { return: 'the chosen schema' },
  },
  data: {
    attributes: [
      {
        attribute: { return: 'attribute1' },
        count: { return: 'the count for query attribute1' },
        results: [{ return: 'a list of matched objects for query attribute1' }],
      },
      {
        attribute: { return: 'attribute1' },
        count: { return: 'the count for query attribute1' },
        results: [{ return: 'a list of matched objects for query attribute1' }],
      },
    ],
  },
};

module.exports = SCHEMAS;
